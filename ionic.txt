//安装打包                                          
$ npm install -g cordova ionic
$ ionic start myApp tabs              
$ cd myApp
$ ionic cordova platform add android         //添加Android项目
$ ionic cordova build android ―prod          //压缩打包
$ ionic cordova run android                        //Android真机调试
$ ionic cordova run android  --livereload     //Android热更新调试
$ ionic cordova run android -l -c -s            //直接执行这个命令可以看打印的console.log

$ android avd   //打开创建模拟器的可视化界面
$ ionic cordova emulate android                 //模拟器调试

$ ionic cordova platform add browser
$ ionic cordova run browser
$ ionic cordova build browser
在项目中的platforms中的browser文件夹中就会有www文件夹，把这个文件夹部署到服务器即可。

//插件列表
cordova plugins list

//创建
ionic g component ion-products   //创建组件
ionic g page products   //创建页面
ionic g provider http     //创建服务

import { ViewController } from 'ionic-angular';

[navPush]="PcontentPage"
[navParams]="{'id':item['_id']}"

//if(this.history=='xuexi'){                  
      //  this.navCtrl.pop();    /*返回上一个页面*/
      //this.navCtrl.push(TabsPage);  /* 回到指定页面 */
//}else{
      //this.navCtrl.popToRoot(); /*回到根页面*/                
//}      



configurations.all {
  resolutionStrategy {
      force 'com.android.support:support-v4:27.1.0'
  }
}


import { from } from 'Rxjs/observable/from';


svn merge -r 2679:2678 providers\config\config.ts


<!-- <ion-item class="wx_teammembereditors_item_5">		 	
	<ion-thumbnail item-start class="wx_teammembereditors_img">
	<img src="../../assets/imgs/sc.png">
	</ion-thumbnail>
	<span class="wx_teammembereditors_span1">上传附件</span>
	<span class="wx_teammembereditors_span2">仅支持上传5个文件</span>	 
</ion-item>  -->

this.app.getRootNav().setRoot('HomePage');

    <preference name="AutoHideSplashScreen" value="false" />
    <preference name="ShowSplashScreen" value="true" />
    <preference name="ShowSplashScreenSpinner" value="false" />
    <preference name="FadeSplashScreen" value="true" />

json.stringify()

json.parse()

    //console.log(this.tabVaule);

    //let url ='appGroupButtonsAPI/getList';
    //this.http.doPost(url, params).subscribe( result => {
      //console.log(result); 
     // for(let i=0; i<this.tabRoots.length;i++ ){  
      //  let b = rs.data[this.tabRoots[i].type]  
      //  if(rs.data[this.tabRoots[i].type]==true){
       //   this.tabRoots1.push(this.tabRoots[i])
       // }
      //}
      
    //});



ionViewDidEnter(){
    console.log("3.0 ionViewDidEnter 当进入页面时触发");
  }

  ionViewWillLeave(){
    console.log("4.0 ionViewWillLeave 当将要从页面离开时触发");
  }

  ionViewDidLeave(){
    console.log("5.0 ionViewDidLeave 离开页面时触发");
  }

  ionViewWillUnload(){
    console.log("6.0 ionViewWillUnload 当页面将要销毁同时页面上元素移除 时触发");
  }

  ionViewCanEnter(){
    console.log("ionViewCanEnter");
  }

  ionViewCanLeave(){
    console.log("ionViewCanLeave");
  }


<ion-tabs class="mytabs"  #myTabs>
   <ion-tab *ngIf="isShowNews == true" [root]="tab1Root" tabTitle="消息" tabIcon="tab-ixiaox"></ion-tab>
   <ion-tab *ngIf="isShowBook == true" [root]="tab2Root" tabTitle="通讯录" tabIcon="tab-itongx"></ion-tab>
   <ion-tab *ngIf="isShowJoin == true" [root]="tab3Root" tabTitle="参与" tabIcon="tab-iwork"></ion-tab>
   <ion-tab *ngIf="isShowLearning == true" [root]="tab4Root" tabTitle="学习" tabIcon="tab-istuy"></ion-tab>
   <ion-tab *ngIf="isShowMy == true" [root]="tab5Root" tabTitle="我的" tabIcon="tab-imy"></ion-tab>
   <ion-tab *ngIf="isShowWork == true" [root]="tab6Root" tabTitle="工作" tabIcon="tab-iwork"></ion-tab>
</ion-tabs>


navigation(code) {
    switch (code) {
    case 'app_menu_patrol':
      this.navCtrl.push(PatrolTaskPage);
      break;
    case 'app_menu_customer':
      this.navCtrl.push(CustomerListPage);
      break;
    default :
      this.nativeService.alert('开发中');
    }
  }


import {ComponentsModule} from '../../../components/components.module';


//获取upload组件的值  
  getPata(event){           //name为文件名；url为文件路径  
    // this.chment.length = 0;
    // this.attachment = event;
    // for(let i=0;i< this.attachment.length;i++){
    //   this.chment.push(this.attachment[i].url);
    // }
    //this.attJoin.declarationAttachment = this.chment.join();
    alert(event)

    this.attJoin.declarationAttachment = event;
    //this.partyOrgDeclareInformation.declarationAttachment = event; 
  }


<!-- <ion-item class="wx_teammembereditors_item_5">		 	
         <ion-thumbnail item-start class="wx_teammembereditors_img">
	 <img src="../../assets/imgs/sc.png">
         </ion-thumbnail>
	<span class="wx_teammembereditors_span1">上传附件</span>
	<span class="wx_teammembereditors_span2">仅支持上传5个文件</span>	 
</ion-item> -->

export const HOST_URL = 'http://192.168.1.66:8188/api/';
//http://193.112.69.57:8188/api/
//http://192.168.1.66:8188/api/
//http://192.168.1.146:8081/api/
//http://192.168.1.128:8081/api/
//http://124.225.222.145:8081/api/
